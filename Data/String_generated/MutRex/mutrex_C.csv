Regex,Attempt Regex,Positive Strings,Negative Strings
0*(10*1)*0*,0*1(10*10*)*,"[011010, 0011111, 1]",[111111]
a+b,(a*|b),"[, aa, b]","[c, B, A, 0]"
0*10*(10*10*)*,-1,[],[]
(a*ba*b)*a*ba*,(a|ba*b)*,"[, abb]","[0bb, b, bB, Bb, bbAbb, bAb]"
0(0|1)*0,0(0|1)*1,"[0011, 01]","[0A1, 0a1, 021]"
(0*10*10*)*|0*,0*10*1(1)0*,"[111, 010110, 001001100]",[]
0*10*(10*10*)*,(1)(111),[],[]
(a*ba*b)*a*ba*,a*ba*b,"[baab, aabb, abab]","[Bb, bB, Abb, bbb, bAb]"
(a*ba*b)*a*ba*,a*ba*(bb)*a*b(bb)*,"[bb, baabbab, aabbbbbaabbbbb]","[bBbb, bbbBbb, bbBb, bbbB, Bb, bbbabbab, Abb, bAbbb]"
b*a*,a(a)*b,"[aaab, ab]","[Ab, aB, aAb, aa*b]"
(a|b)*baa(a|b)*b,"(ba{2,})*","[, baabaa]","[bAA, Baa, baa*]"
a(a|b)*b,b(a|b)a,"[baa, bba]","[bBa, bca, bAa, baA, Baa, b0a]"
b*a*,(a*b*)*baa(a*b*)*b,[babaabab],"[baabaAb, baaB, bAabaab, b, baaBaabaab, Abaab]"
(a|baa)*,"(a)b{2,}","[abb, abbb]","[ab, aBB, Abb]"
(a|b)*baa(a|b)*b,a|b*[baa]b,"[bbbb, ab, a]","[aB, Ab, b, A, 0, bBb, Bab]"
001|1010|110,(001)(10101)(110),[],[]
(0*10*10*)*|0*,1,[],[]
(0|1)(0|1)|(0|1)(0|1)(0|1),0|1,"[0, 1]","[2, A, a]"
(ab|ba)*,(aa|bb|ab|ba)*bb,"[aaabbabbbb, bb]","[aBbb, aAbb, Bbbb, Abb, 0bb, bBbb, bAbb, bB, Aabb, Bb, Abbb, Babb, abb]"
(ab|ba)*,aabb(a|b)*,"[aabb, aabbab]","[aaBb, aabB, aAbb, a, Aabb, aabbc, aabb0, aabbA, aabbB]"
(a|b)*baa(a|b)*b,(a*)(b*|aa*)b,"[aabbb, b]","[0b, B, cb, aBb, aAb, aa*b]"
a+b,(a|b),"[b, a]","[c, B, A, 0]"
a+b,a|b,"[b, a]","[c, B, A, 0]"
(a|b)*baa(a|b)*b,(a*|b*|aa*)b,[bbb],"[a*b, 0b, Ab, B, cb, Bb, aAb, aa*b]"
0*10*(10*10*)*,0*|1(111)0*,"[00, 0, , 11110, 111100, 1111]","[1, A, a]"
((0(0*|(1+0))*)|(1(1*|(0+1))*))?,(0(0*1*)*1)|(1(0*1*)*0),"[0101, 100, 1100, 001]","[0A1, 1A0, A, a, 1, 0]"
(0|1)(0|1)|(0|1)(0|1)(0|1),(0|1)?,"[0, 1]","[2, a, A, 00]"
b*a*,(b|a)*(baa)+(a|b)*b,"[baab, babaaabb]","[baabaAb, b, bAabaab, baa0baab, baaB, Baabaab, baacbaab, baaBaabaab, Abaab, baaAb]"
(0|1)(0|1)|(0|1)(0|1)(0|1),(0|1)|(0|1)|(0|1),[],"[2, a, A]"
b*a*,(a)(a)*(bb)(b)*(a)(a*),"[aaabbba, abbaaa, abbbba]","[aBbba, abBbba, abbA, Abba, abbaA, aAbba, abbBa]"
(a*ba*b)*a*ba*,([a]*[b][a]*[b][a]*)+,[baba],"[b, , Bb, bB, bbAbb, bAbbb]"
001|1010|110,1+0+11+0+,"[10011100, 10110]","[1010, 0110, 1110, 1011]"
(a*ba*b)*a*ba*,b(a*ba*ba*)*a*ba,"[baaba, bbbbbba]","[bbbbAbbbba, bbba, bBa, Bba, bbBba, bbA, bAba, bBbba, bbbAbbba]"
(a|b)(a|b)+aaa+,aa||bbaaa+,"[|bbaaaa, aa, |bbaaa]","[|bbaAa, |bbaaA, 0, |Bbaaa, |bbaa, |bbAaa, A, a, Aa, aA, |bBaaa]"
a+b,b+a,[ba],"[a, bA, Ba]"
a(a|b)a(a|b)*,((a|b)aba(a|b)*),"[aabaab, aaba]","[aAbaba, aaba0, aaBa, 0aba, Aaba, aa, Baba, aabaB, caba, aabac, aabaA, aabAaba]"
(a*ba*b)*a*ba*,(a*ba*ba*)*,"[, bba, bbbb]","[b, Bb, bB, bbAbb, bAb]"
(0|1)(0|1)|(0|1)(0|1)(0|1),(0|1)(0|1)+(0|1)(0|1)(0|1),"[101001, 01110]","[0A000, 00002, 20000, 00020, 0000200, 0000, 00a00, A0000, 00a0000, 000a0, 000A0, a0000, 0000a, 0000A, 02000, 0000A00]"
(a|(b*bb))*,b(ab+ba+b)*,"[babbababbab, b]","[B, bAbbab, babBab, babbaB, babbAb, baBbab]"
(0*10*10*)*|0*,0*1(0*10*10*)+,"[0011111, 111, 0101010]","[1, 11]"
001|1010|110,1+0+011+0+,"[100011100, 100110]","[00110, 10110, 10011, 10010]"
b*a*,(a)(a)*(b)(b)*(a)(a*),"[abbbaaa, aaabbaa, aba]","[aBba, abAa, abaA, abBa, aAba, Aba, ababa]"
b*a*,[ab]*baa[ab]*b,"[baab, babaab, abbaaabb]","[baa0baab, baaB, b, Bbaab, baacbaab, baaBaabaab, Abaab, baabAabaab, baabaAbaab]"
(ab|ba)*,aaa*bbb*(a|b)*,"[aabbaa, aaabbab, aaaabb]","[aAbb, aaAbb, aabb0, aabB, aaBb, Aabb, aa, aabbAbb, aabbc, aabbB]"
(a|b)(a|b)+aaa+,(a|b(aaa)),"[baaa, a]","[bAaa, b, baaA, baAa, A, 0, Baaa]"
a+b,a*|b,"[, aa, b]","[c, B, A, 0]"
(a|b)(a|b)+aaa+,(ab|aaa),"[aaa, ab]","[aB, Ab, a, A, 0, aAa, aaA, Aaa]"
a+b,a*,"[, aa]","[A, a*]"
001|1010|110,(0+1)*01(0+1)*,"[00100101001001, 01]","[, 010A101]"
(0*10*10*)*|0*,0*1(0|11)*,"[100, 001011, 1]","[011, 1a, 1A11]"
(a*ba*b)*a*ba*,(a|bb)*(a|bb)*,[],"[b, A, 0, bB, Bb]"
001|1010|110,(0|01),"[0, 01]","[A, 1, a]"
(ab|ba)*,(aa)*b,"[aaaab, b]","[B, aAb, Aab]"
001|1010|110,0|0|1,[1],"[2, a, A]"
(a|b)(a|b)+aaa+,(a|b)(a|b)+bbb+,"[ababbb, babbb]","[acbbb, abbb, aBbbb, cabbb, Babbb, 0abbb, aabbBbbb, Aabbb, a0bbb, aAbbb]"
a(a|b)a(a|b)*,(a(a|b)b)(a|b)*,"[abb, aabab]","[aabc, aabB, aBb, aAb, aabAb, Aab, acb, aab0, a0b, aaBab]"
(a*ba*b)*a*ba*,[a]{1}([a]{2})*,"[aaaaa, a]","[aaaaaa, A, aAA]"
a(a|b)a(a|b)*,a(a|b)b(a|b)*,"[aab, aabab]","[aabc, aabB, aabA, aBb, aaB, aAb, a0bb, Aab, acb, aab0]"
(ab|ba)*,a,[],[A]
(a|(b*bb))*,(a+b)b(a+b),"[abbaab, abbab]","[abbb, aBbab, bbab, abba+b, Abbab, abbAb, babab, abbaB, abBab]"
001|1010|110,0,[0],[]
001|1010|110,1,[1],[]
a(a|b)a(a|b)*,a(a|b)b(a+b)*,"[aababab, aab]","[acbab, aabaB, aBb, aAb, aaB, aabAb, Aab, a0b]"
001|1010|110,(1|0)(001|10101|110)*,"[0, 1001110, 010101001]","[2, 0A, a, A, 0a, 00]"
001|1010|110,(0|1)*0101(0|1)*,"[0101, 010010110, 100101]","[010120101, 01, 0101A0101, 0101a0101]"
a+b,(a*)ba,"[ba, aaba]","[a*ba, bA, Ba, Aba]"
(a*ba*b)*a*ba*,(a)*b(a)*b,"[bb, aabaab]","[bB, Bb, Abb, babab, bAb]"
0+1*,1,[1],[]
(0*10*10*)*|0*,0*10*11,"[01011, 0010011, 111]",[]
(0|1)(0|1)|(0|1)(0|1)(0|1),-1,[],[]
001|1010|110,[001]|[10101]|[110],[],"[2, A, a]"
001|1010|110,11010110,[],[]
0*10*(10*10*)*,0*(10*1),"[11, 001001]",[10101]
a+b,ba+,"[ba, baa]","[ba+, b, Ba, bA]"
(a|b)*baa(a|b)*b,a(a*)b,"[aab, aaab, ab]","[Ab, aB, aAb]"
a(a|b)a(a|b)*,abba,[],"[aBba, abBa, abbA, Abba]"
001|1010|110,(0|1)*0101(0|1),"[01011, 0101010]","[201010, 0101a, 0101A, 01012, a01010, A01010]"
(a*ba*b)*a*ba*,(bb)+,"[bb, bbbb]","[, bB, Bb]"
0*10*(10*10*)*,0*|1(1)0*,"[00, 11, , 110, 1100]","[1, A, a]"
b*a*,a(a*)b,"[aaab, ab]","[Ab, aB, aAb, aa*b]"
(ab|ba)*,(a+a(b+aa)*b)*a(b+aa)*a,"[aa, aabaaababaabaaa]","[aabaBaaa, aabAabaabaa, aaBaabaa, aA, aabAbaaa, aabaAbaa, abAaa, abaAa]"
b*a*,(b|a)*(baa)+(a|b)*b+,"[baab, babaaabab]","[baabaAb, b, baa0baab, baacbaab, baaBaabaab, baabAabaab, baa, baaBb]"
((0(0*|(1+0))*)|(1(1*|(0+1))*))?,(0(0|1)*1)|(1(1|0)*0),"[10, 0101, 1100, 0011, 01]","[0A1, 1A0, 1, a, A]"
(a|baa)*,a*b(a*ba*b)*a,"[ba, aabbbbba]","[bBba, bbBa, bA, bbbAbba, Ba, bbAba, Aba]"
0*10*(10*10*)*,0*,"[00, ]",[0*]
a+b,(a*b)*a,"[bba, aba, a]","[A, Ba, Aba]"
001|1010|110,((0|01)(1|10)),"[0110, 01]","[0A, 0a, 11, 00, a1, A1]"
(0|1)(0|1)|(0|1)(0|1)(0|1),((0|1)(0|1))+((0|1)(0|1)(0|1)),"[00000, 0000110, 0011001]","[00200, 0a000, 0A000, 00002, 00020, 0000a0000, 00a00, A0000, 000, 000a0, 000A0, 0020000, 0000a, 0000A, 02000, 00A00]"
0*10*(10*10*)*,(0*10*10*10*10*)*,"[, 11111111, 0110101]",[111111]
001|1010|110,(1|0)(001|1010|110)*,"[0, 10011010, 01010001110]","[2, a, 0a, A, 0A, 00]"
(a*ba*b)*a*ba*,a*b(a*ba*b)*b,"[aabbbbbb, bb, abb]","[bBbb, bbBb, Bb, bB, bbbbb, Abb, bbAbb, bAbbb]"
(a|baa)*,abb*,"[abbb, ab]","[aB, Ab, abB, abb*]"
(a*ba*b)*a*ba*,a*b(a|(ba*b))b,"[bbaabb, aabab, abbbb]","[bBbb, bbBb, Abab, bbb, bbAbb, Bab, baB, bAb, b0b]"
(a|b)*baa(a|b)*b,(a)*(baa)*((a)*(baa)*)*,"[, baaabaaa]","[A, bAa, baA, Baa]"
(a|b)*baa(a|b)*b,a+|b*a*,"[, bbaa]","[c, B, A, 0, aba, a+]"
0*10*(10*10*)*,(0*(10*1)*0*10*(10*1)*1),"[11, 11111001, 0010100101, 100101011111]","[11011010111, 0*1111]"
